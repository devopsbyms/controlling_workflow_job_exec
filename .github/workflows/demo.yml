name: Deploy website
on: 
    push: 
        branches:
            - main
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Get code
              uses: actions/checkout@v4
            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} 
            - name: Install dependencies
              run: npm ci
            - name: Install ESLint
              run: npm install eslint
            - name: Lint Code
              run: npx eslint "src/**/*.{js,jsx,ts,tsx}"
            - name: Test code
              id: run-tests
              run: npm run test
            - name: Upload test report
              if: failure() && steps.run-tests.outcome == 'failure'
              uses: actions/upload-artifact@v3
              with:
                name: test-report
                path: test.json
    build:
        runs-on: ubuntu-latest
        needs: test
        outputs:
          script-file: ${{ steps.publish.outputs.script-file }}
        steps:
            - name: Get code
              uses: actions/checkout@v4
            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} 
            - name: Install dependencies
              run: npm ci
            - name: Build website
              run: npm run build
            - name: Publish JS filename
              id: publish
              run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                name: dist-files
                path: dist
                # path: |
                #     dist
                #     package.json
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
          - name: Download Artifact
            uses: actions/download-artifact@v4
            with:
              name: dist-files
          - name: Output contents of dist
            run: ls
          - name: Output filename
            run: echo ${{ needs.build.outputs.script-file }}
          - name: Deploy
            run: echo "Deploying website"
    report:
      needs: [deploy]
      if: failure()
      runs-on: ubuntu-latest
      steps:
        - name: Output information
          run: |
            echo "Something went wrong"
            echo "${{ github }}"
